@page
@model Feedback_Application.Pages.FeedbackPages.ErgebnisseModel
@{
    ViewData["Title"] = "Ergebnisse";
}

<link rel="stylesheet" href="~/css/Ergebnisse.css" />

<div class="container">
    <h2>Feedback-Ergebnisse</h2>

    <div class="accordion" id="feedbackAccordion">
        @foreach (var feedback in Model.FeedbackErgebnisse)
        {
            var feedbackId = feedback.FeedbackTitel.Replace(" ", "").Replace(":", "");
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading-@feedbackId">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@feedbackId" aria-expanded="false">
                        @feedback.FeedbackTitel (Erstellt am: @feedback.Erstellungsdatum.ToShortDateString())
                    </button>
                </h2>
                <div id="collapse-@feedbackId" class="accordion-collapse collapse" data-bs-parent="#feedbackAccordion">
                    <div class="accordion-body">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Aussage</th>
                                    <th colspan="4">Antworten</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var ergebnis in feedback.Ergebnisse)
                                {
                                    <tr>
                                        <td>@ergebnis.Aussage</td>
                                        @foreach (var antwort in ergebnis.Antwortverteilung)
                                        {
                                            <td>@antwort.Key: @antwort.Value</td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    // Bootstrap Accordion automatisch schließen, wenn ein anderes geöffnet wird
    document.addEventListener("DOMContentLoaded", function () {
        var accordionItems = document.querySelectorAll(".accordion-button");
        accordionItems.forEach(function (button) {
            button.addEventListener("click", function () {
                var currentlyOpen = document.querySelector(".accordion-collapse.show");
                if (currentlyOpen && currentlyOpen !== button.nextElementSibling) {
                    new bootstrap.Collapse(currentlyOpen, { toggle: false }).hide();
                }
            });
        });
    });
</script>
