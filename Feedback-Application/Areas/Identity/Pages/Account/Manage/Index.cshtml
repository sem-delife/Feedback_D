@page
@model Feedback_Application.Areas.Identity.Pages.Account.Manage.IndexModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Profil";
    ViewData["ActivePage"] = ManageNavPages.Index;
}

<h3>@ViewData["Title"]</h3>
<partial name="_StatusMessage" for="StatusMessage" />

<div class="row">
    <!--  Linke Spalte: Benutzerprofil -->
    <div class="col-md-6">
        <form id="profile-form" method="post">
            <div class="form-group">
                <label asp-for="Username" class="form-label"></label>
                <input asp-for="Username" class="form-control" disabled />
            </div>
        </form>

        <!-- Profil löschen Bereich -->
        <div class="mt-4 p-3 border rounded bg-light">
            <h5 class="text-danger">Profil löschen</h5>
            <p class="text-muted">Achtung! Diese Aktion kann nicht rückgängig gemacht werden.</p>

            <form method="post" asp-page-handler="DeleteAccount">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-danger">
                    <i class="bi bi-trash"></i> Konto endgültig löschen
                </button>
            </form>
        </div>
        <!-- Neuer Bereich: Admin hinzufügen -->
        @if (User.IsInRole("Admin"))
        {
            <div class="mt-4 p-3 border rounded bg-light">
                <h5 class="text-primary">Admin hinzufügen</h5>
                <p class="text-muted">Geben Sie den Benutzernamen ein, um ihn zum Admin zu befördern.</p>

                <form id="adminPromotionForm" method="post" asp-page-handler="MakeAdmin">
                    @Html.AntiForgeryToken()

                    <div class="mb-3">
                        <label for="usernameInput" class="form-label">Benutzername</label>
                        <input type="text" id="usernameInput" name="username" class="form-control" required />
                    </div>

                    <button type="button" class="btn btn-success w-100" onclick="confirmAdminPromotion()">
                        <i class="bi bi-arrow-up-circle"></i> Befördern
                    </button>
                </form>
            </div>
        }
    </div>

    <!--  Rechte Spalte: Admin-Einstellungen (nur für Admins sichtbar) -->
    <div class="col-md-6">
        @if (User.IsInRole("Admin"))
        {
            <div class="card shadow-sm border-0 mb-4">
                <div class="card-header bg-primary text-white d-flex align-items-center">
                    <i class="bi bi-tools fs-4 me-2"></i>
                    <span>Admin-Einstellungen</span>
                </div>
                <div class="card-body">
                    <form method="post" asp-page-handler="SaveTeacherCode">
                        @Html.AntiForgeryToken()
                        <div asp-validation-summary="All" class="text-danger"></div>

                        <div class="mb-3">
                            <label asp-for="TeacherCode" class="form-label">
                                <i class="bi bi-key"></i> Lehrer-Registrierungscode
                            </label>
                            <input asp-for="TeacherCode" class="form-control" />
                            <span asp-validation-for="TeacherCode" class="text-danger"></span>
                        </div>

                        <button type="submit" class="btn btn-primary w-100">
                            <i class="bi bi-save"></i> Speichern
                        </button>
                    </form>

                    @if (!string.IsNullOrEmpty(Model.StatusMessage))
                    {
                        <div class="alert alert-success mt-3">@Model.StatusMessage</div>
                    }
                </div>
            </div>

            <!--  Tabellen für Klassen, Fächer und Abteilungen -->
            @foreach (var table in Model.DataTables)
            {
                <partial name="_AdminDataTable" model="table" />
            }

            <!--  Modal für das Hinzufügen/Bearbeiten -->
            <partial name="_AdminModal" model="Model" />
        }
    </div>
</div>

@section Scripts {
    <script>
        window.openAddEntityModal = function(entityType) {
            document.getElementById("AddEntityType").value = entityType;
            document.getElementById("AddEntityName").value = "";

            var modal = new bootstrap.Modal(document.getElementById("addEntityModal"));
            modal.show();
        };

        window.openEditEntityModal = function(id, name, type) {
            document.getElementById("EditEntityId").value = id;
            document.getElementById("EditEntityName").value = name;
            document.getElementById("EditEntityType").value = type;

            var modal = new bootstrap.Modal(document.getElementById("editEntityModal"));
            modal.show();
        };

        function confirmAdminPromotion() {
            var username = document.getElementById("usernameInput").value;
            if (!username) {
                alert("Bitte geben Sie einen Benutzernamen ein!");
                return;
            }

            var confirmAction = confirm(`Wollen Sie wirklich ${username} zum Admin befördern?`);
            if (confirmAction) {
                document.getElementById("adminPromotionForm").submit();
            }
        }
    </script>
}
